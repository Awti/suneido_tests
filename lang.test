@lang_rangelen
"", 0, ""
"", 9, ""
"", -9, ""

"hello world", 0, "hello world"
"hello world", -99, "hello world"
"hello world", 6, "world"
"hello world", -5, "world"
"hello world", 99, ""

"hello world", 0, 0, ""
"hello world", 0, 4, "hell"
"hello world", 3, 2, "lo"
"hello world", 0, -5, "" // NOT end relative
"hello world", 2, -2, "" // NOT end relative

@lang_rangeto
"hello world", 0, 0, ""
"hello world", 0, 5, "hello"
"hello world", -99, 5, "hello"
"hello world", 0, 99, "hello world"
"hello world", 0, -99, ""
"hello world", 6, 0, ""
"hello world", 6, 5, ""
"hello world", 6, 11, "world"
"hello world", 6, 99, "world"
"hello world", 6, -5, ""
"hello world", -5, 99, "world"
"hello world", -99, 99, "hello world"
"hello world", -11, -6, "hello"

@compare
false, true,
-1e99, -123, -.1, 0, .1, 123, 1e99,
`""`, `"bar"`, `"foo"`, `"foobar"`,
`#20000101`, `#20000102`, `#20000201`, `#20010101`,
`#()`, `#{1}`, `#(2)`, `#{3,3}`, `#(3,4)`,
`function () {}`

@compare_packed
'""', // packs to zero length so less than everything else
false, true,
`-inf`, -1e99, -123, -.1, 0, .1, 123, 1e99, inf,
`"bar"`, `"foo"`, `"foobar"`,
`#20000101`, `#20000102`, `#20000201`, `#20010101`,
`#()`, `#{}`

@execute // packing

`Pack("")`, `""`
`Pack(false)`, `"\x00"`
`Pack(true)`, `"\x01"`

`Pack(0)`, `"\x03"`
`Pack(1/0)`, `"\x03\xff\xff"` // inf
`Pack(-1/0)`, `"\x02\x00\x00"` // -inf
`Pack(99)`, `"\x03\x82\x63"`
`Pack(9876)`, `"\x03\x84\x62\x4c"`
`Pack(-1111)`, `"\x02\x7b\xf4\xf4"`
`Pack(1234560000654321)`, `"\x03\x90\x0c\x22\x38\x00\x00\x41\x2b\x15"`
`Pack(-1e99)`, `"\x02\x1b\xf5"`

`Pack("foo")`, `"\x04foo"`

`Pack(#())`, `"\x06"`
`Pack(#(true))`, `"\x06\x01\x01\x01\x00"`
`Pack(#(false,true))`, `"\x06\x02\x01\x00\x01\x01\x00"`
`Pack(#(a, b: c))`, `"\x06\x01\x02\x04a\x01\x02\x04b\x02\x04c"`

`Unpack("")`, `""`
`x=#(); Unpack(Pack(x)) is x`
`x=#(1,2); Unpack(Pack(x)) is x`
`x=#(a:3,b:4); Unpack(Pack(x)) is x`
`x=#(1,2,a:3,b:4); Unpack(Pack(x)) is x`

`Type(Unpack(Pack(#())))`, `"Object"`
`Type(Unpack(Pack(#{})))`, `"Record"`
