@execute

`x = #()
x.a = 123` throws "readonly"

`x = #{}
x.a = 123` throws "readonly"

`x = Object()
x.Set_readonly()
x.a = 123` throws "readonly"

`x = Record()
x.Set_readonly()
x.a = 123` throws "readonly"

// recursive
`x = Object(y: Object())
x.Set_readonly()
x.y.a = 123` throws "readonly"

`x = Record()
x.a`, "''"

`x = Object()
x.a` throws "uninitialized member"

`x = Object()
x.Set_default(0)
x.a`, 0

`x = Record()
x.Set_default(0)
x.a`, 0

`x = #()
x.Set_default(0)` throws "readonly"

`x = #{}
x.Set_default(0)` throws "readonly"

`x = Object()
x.Set_readonly()
x.Set_default(0)` throws "readonly"

// object.Add

`Object().Add(1)`, `#(1)`

`Object(1, 2).Add(3, 4)`, `#(1, 2, 3, 4)`

`Object().Add(at: 'a')`, `#()`

`Object().Add(1 at: 'a')`, `#(a: 1)`

`Object().Add(1, 2 at: 'a')` throws "position"

`Object().Add(1 at: 'a', x: 2, y: 3)`, `#(a: 1)` // ignore extra named

`Object().Add(1 at: 9)`, `#(9: 1)`

`Object(1, 4).Add(2, 3 at: 1)`, `#(1, 2, 3, 4)`

// same calls with @args

`Object().Add(@#(1))`, `#(1)`

`Object(1, 2).Add(@#(3, 4))`, `#(1, 2, 3, 4)`

`Object().Add(@#(at: 'a'))`, `#()`

`Object().Add(@#(1 at: 'a'))`, `#(a: 1)`

`Object().Add(@#(1, 2 at: 'a'))` throws "position"

`Object().Add(@#(1 at: 'a', x: 2, y: 3))`, `#(a: 1)` // ignore extra named

`Object().Add(@#(1 at: 9))`, `#(9: 1)`

`Object(1, 4).Add(@#(2, 3 at: 1))`, `#(1, 2, 3, 4)`

// same calls with @+1 args

`Object().Add(@+1 #(0, 1))`, `#(1)`

`Object(1, 2).Add(@+1 #(0, 3, 4))`, `#(1, 2, 3, 4)`

`Object().Add(@+1 #(1 at: 'a'))`, `#()`

`Object().Add(@+1 #(0, 1 at: 'a'))`, `#(a: 1)`

`Object().Add(@+1 #(0, 1, 2 at: 'a'))` throws "position"

`Object().Add(@+1 #(0, 1 at: 'a', x: 2, y: 3))`, `#(a: 1)` // ignore extra named

`Object().Add(@+1 #(0, 1 at: 9))`, `#(9: 1)`

`Object(1, 4).Add(@+1 #(0, 2, 3 at: 1))`, `#(1, 2, 3, 4)`

// Sort

`#().Sort!()` throws "readonly"

`Object().Sort!()`, `#()`

`Object(1,2,3,4).Sort!()`, `#(1,2,3,4)`

`Object(2,4,1,3).Sort!()`, `#(1,2,3,4)`

`Object(2,4,1,3).Sort!(function (x,y) { x > y })`, `#(4,3,2,1)`

`Record(2,4,1,3).Sort!(function (x,y) { x > y })`, `#{4,3,2,1}`

// Delete

`[11,22,a:33,b:44].Delete(#foo)`, `[11,22,a:33,b:44]`

`[11,22,a:33,b:44].Delete(all:)`, `[]`

`[11,22,a:33,b:44].Delete(0)`, `[22,a:33,b:44]`

`[11,22,a:33,b:44].Delete(1)`, `[11,a:33,b:44]`

`[11,22,a:33,b:44].Delete('a')`, `[11,22,b:44]`

`[11,22,a:33,b:44].Delete(#b)`, `[11,22,a:33]`

`[11,22,a:33,b:44].Delete(1,0,#a,'b')`, `[]`

// Erase

`[11,22,a:33,b:44].Erase(#foo)`, `[11,22,a:33,b:44]`

`[11,22,a:33,b:44].Erase(0)`, `[1: 22,a:33,b:44]`

`[11,22,a:33,b:44].Erase(1)`, `[11,a:33,b:44]`

`[11,22,a:33,b:44].Erase('a')`, `[11,22,b:44]`

`[11,22,a:33,b:44].Erase(#b)`, `[11,22,a:33]`

`[11,22,a:33,b:44].Erase(1,0,#a,'b')`, `[]`
